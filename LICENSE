「开始」菜单@
'3D Objects'/
 AppData/
'Application Data'@
 Contacts/
 Cookies@
 Desktop/
 doc2any.ini
 Documents/
 Downloads/
 Favorites/
'Foxit Reader SDK ActiveX.ini'
 IntelGraphicsProfiles/
 Links/
'Local Settings'@
 Music/
'My Documents'@
 NetHood@
 NTUSER.DAT
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TM.blf
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TMContainer00000000000000000002.regtrans-ms
 ntuser.ini
 OneDrive/
 Pictures/
 PrintHood@
 Recent@
 Roaming/
'Saved Games'/
 Searches/
 SendTo@
 Templates@
 Videos/
 workspace/

ThinkPad_LONG@ThinkPad MINGW64 ~
$ pwd
/c/Users/Think

ThinkPad_LONG@ThinkPad MINGW64 ~
$ git config --global user.name "lonng"

ThinkPad_LONG@ThinkPad MINGW64 ~
$ git config --global user.email "lh-happy2008@163.com"

ThinkPad_LONG@ThinkPad MINGW64 ~
$ pwd
/c/Users/Think

ThinkPad_LONG@ThinkPad MINGW64 ~
$ mkdir learngit

ThinkPad_LONG@ThinkPad MINGW64 ~
$ ls
 「开始」菜单@
'3D Objects'/
 AppData/
'Application Data'@
 Contacts/
 Cookies@
 Desktop/
 doc2any.ini
 Documents/
 Downloads/
 Favorites/
'Foxit Reader SDK ActiveX.ini'
 IntelGraphicsProfiles/
 learngit/
 Links/
'Local Settings'@
 Music/
'My Documents'@
 NetHood@
 NTUSER.DAT
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TM.blf
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TMContainer00000000000000000002.regtrans-ms
 ntuser.ini
 OneDrive/
 Pictures/
 PrintHood@
 Recent@
 Roaming/
'Saved Games'/
 Searches/
 SendTo@
 Templates@
 Videos/
 workspace/

ThinkPad_LONG@ThinkPad MINGW64 ~
$ cd learngit/

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit
$ pwd
/c/Users/Think/learngit

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit
$ git init
Initialized empty Git repository in C:/Users/Think/learngit/.git/

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ls -ah
./  ../  .git/

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ls

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commit -m "wrote a readme file"
[master (root-commit) a0a8eda] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git diff
diff --git a/readme.txt b/readme.txt
index d8036c1..013b5bc 100644
--- a/readme.txt
+++ b/readme.txt
@@ -1,2 +1,2 @@
-Git is a version control system.
+Git is a distributed version control system.
 Git is free software.
\ No newline at end of file

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   readme.txt


ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commit -m "add distributed"
[master c481135] add distributed
 1 file changed, 1 insertion(+), 1 deletion(-)

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git log
commit c48113505c314b1213466387428b12106b127726 (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 16:41:24 2018 +0800

    add distributed

commit a0a8eda47698531023b0e5a55dc07223a425f7d2
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 16:29:01 2018 +0800

    wrote a readme file

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commit -m "append GPL"
[master e2b543b] append GPL
 1 file changed, 1 insertion(+), 1 deletion(-)

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git log
commit e2b543b1d23081cfe6e27fa7e470d821562c2d61 (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 16:54:17 2018 +0800

    append GPL

commit c48113505c314b1213466387428b12106b127726
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 16:41:24 2018 +0800

    add distributed

commit a0a8eda47698531023b0e5a55dc07223a425f7d2
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 16:29:01 2018 +0800

    wrote a readme file

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git reset --hard HEAD
HEAD is now at e2b543b append GPL

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git reset --hard HEAD^
HEAD is now at c481135 add distributed

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ cat readme.txt
Git is a distributed version control system.
Git is free software.
ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git log
commit c48113505c314b1213466387428b12106b127726 (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 16:41:24 2018 +0800

    add distributed

commit a0a8eda47698531023b0e5a55dc07223a425f7d2
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 16:29:01 2018 +0800

    wrote a readme file

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git reset --hard e2b543
HEAD is now at e2b543b append GPL

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ cat readme.txt
Git is a distributed version control system.
Git is free software distributed under the GPL.
ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git log --pretty=oneline
e2b543b1d23081cfe6e27fa7e470d821562c2d61 (HEAD -> master) append GPL
c48113505c314b1213466387428b12106b127726 add distributed
a0a8eda47698531023b0e5a55dc07223a425f7d2 wrote a readme file

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git reflog
e2b543b (HEAD -> master) HEAD@{0}: reset: moving to e2b543
c481135 HEAD@{1}: reset: moving to HEAD^
e2b543b (HEAD -> master) HEAD@{2}: reset: moving to HEAD
e2b543b (HEAD -> master) HEAD@{3}: commit: append GPL
c481135 HEAD@{4}: commit: add distributed
a0a8eda HEAD@{5}: commit (initial): wrote a readme file

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git gui

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        LICENSE

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add readme.txt  LICENSE

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   LICENSE
        modified:   readme.txt


ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commit -m "add LICENSE file and understand how stage works"
[master bbf9e8d] add LICENSE file and understand how stage works
 2 files changed, 2 insertions(+), 1 deletion(-)
 create mode 100644 LICENSE

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   readme.txt


ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ cat readme.txt
Git is a distributed version control system.
Git is free software distributed under the GPL.
Git has a mutable index called stage.
Git tracks changes of files.
ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commit -m  "git tracks changes"
[master 1ad5d85] git tracks changes
 1 file changed, 2 insertions(+), 1 deletion(-)

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git diff HEAD -- readme.txt
diff --git a/readme.txt b/readme.txt
index db28b2c..9a8b341 100644
--- a/readme.txt
+++ b/readme.txt
@@ -1,4 +1,4 @@
 Git is a distributed version control system.
 Git is free software distributed under the GPL.
 Git has a mutable index called stage.
-Git tracks changes.
\ No newline at end of file
+Git tracks changes of files.
\ No newline at end of file

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ vi readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add readme.xtx
fatal: pathspec 'readme.xtx' did not match any files

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   readme.txt


ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commited -m "USing vi edit the file."
git: 'commited' is not a git command. See 'git --help'.

The most similar command is
        commit-tree

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commit -m "USing vi edit the file."
[master 6407f86] USing vi edit the file.
 1 file changed, 2 insertions(+), 1 deletion(-)

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)


//2018-3-29

ThinkPad_LONG@ThinkPad MINGW64 ~
$ ls
 「开始」菜单@
'3D Objects'/
 AppData/
'Application Data'@
 Contacts/
 Cookies@
 Desktop/
 doc2any.ini
 Documents/
 Downloads/
 Favorites/
'Foxit Reader SDK ActiveX.ini'
 IntelGraphicsProfiles/
 learngit/
 Links/
'Local Settings'@
 Music/
'My Documents'@
 NetHood@
 NTUSER.DAT
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TM.blf
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{2599cde1-271b-11e5-80c6-0026b948c6eb}.TMContainer00000000000000000002.regtrans-ms
 ntuser.ini
 OneDrive/
 Pictures/
 PrintHood@
 Recent@
 Roaming/
'Saved Games'/
 Searches/
 SendTo@
 Templates@
 Videos/
 workspace/

ThinkPad_LONG@ThinkPad MINGW64 ~
$ cd learngit/

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ls
LICENSE  readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   LICENSE
        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git checkout --readme.txt
error: unknown option `readme.txt'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -q, --quiet           suppress progress reporting
    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --detach              detach HEAD at named commit
    -t, --track           set upstream info for new branch
    --orphan <new-branch>
                          new unparented branch
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -f, --force           force checkout (throw away local modifications)
    -m, --merge           perform a 3-way merge with the new branch
    --overwrite-ignore    update ignored files (default)
    --conflict <style>    conflict style (merge or diff3)
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting


ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git checkout -- readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   LICENSE

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add LICENSE

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   LICENSE


ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commit -m LICENSE
[master 28197fc] LICENSE
 1 file changed, 408 insertions(+)

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git check -- readme.txt
git: 'check' is not a git command. See 'git --help'.

The most similar commands are
        checkout
        check-attr
        cherry

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git checkout -- readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ vi readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ cat readme.txt
Git is a distributed version control system.
Git is free software distributed under the GPL.
Git has a mutable index called stage.
Git tracks changes of files.
Git vi input.
My boss is till using SVN,stupid.

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git staus
git: 'staus' is not a git command. See 'git --help'.

The most similar command is
        status

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git reset HEAD readme.txt
Unstaged changes after reset:
M       readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git checkout -- readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ls
LICENSE  readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add test.txt
fatal: pathspec 'test.txt' did not match any files

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ls
LICENSE  readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ls
LICENSE  readme.txt  test.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git add test.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git commit -m "add test.txt"
[master 362ebc3] add test.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git staus
git: 'staus' is not a git command. See 'git --help'.

The most similar command is
        status

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git log
commit 362ebc36585af9ca1ebce399e55d9a53be1d3aeb (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 17:02:34 2018 +0800

    add test.txt

commit 28197fc8a28b871d9dc5b28245024b2c4a00f6cd
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 16:45:31 2018 +0800

    LICENSE

commit 6407f869d155e519fff916dffd37e1ac6e6c0462
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:52:56 2018 +0800

    USing vi edit the file.

commit 1ad5d85f9229db5ded56c64f2de0297053c6d134
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:46:43 2018 +0800

    git tracks changes
...skipping...
commit 362ebc36585af9ca1ebce399e55d9a53be1d3aeb (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 17:02:34 2018 +0800

    add test.txt

commit 28197fc8a28b871d9dc5b28245024b2c4a00f6cd
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 16:45:31 2018 +0800

    LICENSE

commit 6407f869d155e519fff916dffd37e1ac6e6c0462
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:52:56 2018 +0800

    USing vi edit the file.

commit 1ad5d85f9229db5ded56c64f2de0297053c6d134
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:46:43 2018 +0800

    git tracks changes
...skipping...
commit 362ebc36585af9ca1ebce399e55d9a53be1d3aeb (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 17:02:34 2018 +0800

    add test.txt

commit 28197fc8a28b871d9dc5b28245024b2c4a00f6cd
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 16:45:31 2018 +0800

    LICENSE

commit 6407f869d155e519fff916dffd37e1ac6e6c0462
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:52:56 2018 +0800

    USing vi edit the file.

commit 1ad5d85f9229db5ded56c64f2de0297053c6d134
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:46:43 2018 +0800

    git tracks changes
...skipping...
commit 362ebc36585af9ca1ebce399e55d9a53be1d3aeb (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 17:02:34 2018 +0800

    add test.txt

commit 28197fc8a28b871d9dc5b28245024b2c4a00f6cd
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 16:45:31 2018 +0800

    LICENSE

commit 6407f869d155e519fff916dffd37e1ac6e6c0462
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:52:56 2018 +0800

    USing vi edit the file.

commit 1ad5d85f9229db5ded56c64f2de0297053c6d134
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:46:43 2018 +0800

    git tracks changes
...skipping...
commit 362ebc36585af9ca1ebce399e55d9a53be1d3aeb (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 17:02:34 2018 +0800

    add test.txt

commit 28197fc8a28b871d9dc5b28245024b2c4a00f6cd
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 16:45:31 2018 +0800

    LICENSE

commit 6407f869d155e519fff916dffd37e1ac6e6c0462
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:52:56 2018 +0800

    USing vi edit the file.

commit 1ad5d85f9229db5ded56c64f2de0297053c6d134
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:46:43 2018 +0800

    git tracks changes
...skipping...
commit 362ebc36585af9ca1ebce399e55d9a53be1d3aeb (HEAD -> master)
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 17:02:34 2018 +0800

    add test.txt

commit 28197fc8a28b871d9dc5b28245024b2c4a00f6cd
Author: lonng <lh-happy2008@163.com>
Date:   Thu Mar 29 16:45:31 2018 +0800

    LICENSE

commit 6407f869d155e519fff916dffd37e1ac6e6c0462
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:52:56 2018 +0800

    USing vi edit the file.

commit 1ad5d85f9229db5ded56c64f2de0297053c6d134
Author: lonng <lh-happy2008@163.com>
Date:   Wed Mar 28 17:46:43 2018 +0800

    git tracks changes

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ rm test.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ls
LICENSE  readme.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    test.txt

no changes added to commit (use "git add" and/or "git commit -a")

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git checkout -- test.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ls
LICENSE  readme.txt  test.txt

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git status
On branch master
nothing to commit, working tree clean

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ ssh-keygen -t rsa -C "lh-happy2008@163.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/Think/.ssh/id_rsa):
Created directory '/c/Users/Think/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/Think/.ssh/id_rsa.
Your public key has been saved in /c/Users/Think/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:mkl8yIzG7B2V/uDJJ5AEl67EGuT+rIOPXFiJIWTE/2A lh-happy2008@163.com
The key's randomart image is:
+---[RSA 2048]----+
|o+  . ..         |
|o..  o.  .       |
|.+.. .. o        |
|. =E+*.=         |
| o.*B.X S        |
|  =o.+ X +       |
| o +. = = o      |
|o.o o    o       |
|.ooo             |
+----[SHA256]-----+

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git remote add origin git@github.com:Jimsysu/learngit.git

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
$ git push -u origin master
The authenticity of host 'github.com (13.250.177.223)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? Y
Please type 'yes' or 'no': yes
Warning: Permanently added 'github.com,13.250.177.223' (RSA) to the list of known hosts.
Counting objects: 24, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (20/20), done.
Writing objects: 100% (24/24), 3.79 KiB | 554.00 KiB/s, done.
Total 24 (delta 5), reused 0 (delta 0)
remote: Resolving deltas: 100% (5/5), done.
To github.com:Jimsysu/learngit.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

ThinkPad_LONG@ThinkPad MINGW64 ~/learngit (master)
